//main layer div

$layer_z_index: 2;
%layer_z_index {
	z-index: $layer_z_index;
}

.cui-layer {
	//skin
	background-color: $default_background_color;
	box-shadow: $layer_box_shadow;
	
	//structure
	position: absolute;
	overflow: hidden;

	margin: $grid_size*2;
	padding: 0;
	
	box-sizing: content-box;
	@extend %layer_z_index;

	@include flex_display(flex);
	@include flex_direction(column);
}


body {
	&.cui-layer-effect-blur {
		> div:not(.cui-tmpl-layer-backdrop) {
			-webkit-filter: blur(10px);
		}

		.cui-tmpl-layer-backdrop.layer-backdrop-modal:empty {
			opacity: 0;
		}
		.cui-tmpl-layer-backdrop:not(:empty) {
			-webkit-filter: blur(4px);
		}
	}

	&.cui-layer-effect-darken {
		.cui-tmpl-layer-backdrop:not(:empty),
		.cui-tmpl-layer-backdrop.layer-backdrop-modal:empty,
		> div:not(.cui-tmpl-layer-root) {
			background: #000;
			opacity: 0.85;
		}
	}
}


.cui-tmpl-layer-backdrop {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: black;
	opacity: 0;
	z-index: 2;
}

.cui-layer-bounce {
	transform: scale(1.02)
}

.cui-tmpl-layer-backdrop.layer-backdrop-modal {
	opacity: 0.5;
}


//invisible pointer to get some distance to anchor element
@mixin layer_distance_to_anchor_with_invisible_pointer($distance) {
	@include ASSERT_TYPE(layer-pointer);
	opacity: 0 !important;
	margin: 0 !important;
	border-bottom: $distance solid !important;
	border-left: $distance solid !important;
}


.layer-pointer {
	position: absolute;
	margin: $grid_size;
	opacity: 0.8;
	z-index: 2;

  	&.ez-pointer-placement {
	  width: 0;
	  height: 0;
	  border-color: #000000;

	  //css-triangle arrows for pole directions of the pointer
	  &-s {
		border-top: 0;
		border-bottom: 10px solid;
		border-left: 10px solid transparent;
		border-right: 10px solid transparent;
	  }
	  &-n {
		border-top: 10px solid;
		border-bottom: 0px ;
		border-left: 10px solid transparent;
		border-right: 10px solid transparent;
	  }
	  &-w {
		border-top: 10px solid transparent;
		border-bottom: 10px solid transparent;
		border-left: 10px solid ;
		border-right: 0px;
	  }
	  &-e {
		border-top: 10px solid transparent;
		border-bottom: 10px solid transparent;
		border-left: 0px;
		border-right: 10px solid;
	  }

	}
}


.cui-layer-autosize-transition {
	transition: all ease-out 0.5s;

	//transitions are nice but they force layouts on our content
	//we try to avoid that by setting the center of a popover to an infinite and constant width. should cover many cases
	& > .cui-pane {
		& > .cui-vertical-layout-center,
		& > .cui-horizontal-layout-center {
			width: 5000px;
			height: 5000px;
		}
	}

	//avoid irritating appearance of scollbars
	//TODO this code could hide already existing scrollbars, in most cases this is not a problem but its not a generic solution. user should be able to choose if its enabled !?
	& .cui-list-view.cui-maximize > .cui-vertical-layout-center > .cui-list-view-grid > .cui-list-view-grid-inner-bottom > .cui-list-view-grid-quadrant-3,
	& .cui-pane {
		overflow: hidden !important;

		& > .cui-vertical-layout-center,
		& > .cui-horizontal-layout-center {
			overflow: hidden !important;
		}
	}
}