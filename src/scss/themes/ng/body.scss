/*
 * coffeescript-ui - Coffeescript User Interface System (CUI)
 * Copyright (c) 2013 - 2016 Programmfabrik GmbH
 * MIT Licence
 * https://github.com/programmfabrik/coffeescript-ui, http://www.coffeescript-ui.org
*/

@import '../../icons/_svg-dimensions.scss';
@import url($font_awesome_url);

// reset

table {
	border-collapse: collapse;
}

td {
	vertical-align: top;
	padding: 0;
	margin: 0;
}

ul {
	margin: 0;
	padding-left: 16px;
}

a {
	text-decoration: none;
	color: black;
}
// basics

html {
	overflow: hidden;
  width: 100%;
  height: 100%;
}

label {
	box-sizing: border-box;
}

body {
	font-family: -apple-system, BlinkMacSystemFont, ".SFNSText-Regular", "San Francisco", "Roboto", "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;
	font-size: 13px;
	line-height: normal;
	background: $background;
	display: flex;
	width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
}

input,
textarea {
	-webkit-appearance: none;
	        appearance: none;
	width: 100%;
	min-width: 100px;
	font-size: 12px;
	border: 1px solid $input-border;
	border-radius: 0;
	border-top-color: darken($input-border, 3%);
	background: $foreground;
	font-family: inherit;
	padding: 2px 3px;
	flex: 1 1 auto;
	box-sizing: border-box;
	resize: vertical;
	
	&.cui-input-shadow {
		position: absolute;
		display: block;
		padding: 0;
		border: none;
		top: -1000px;
		left: -1000px;
	}
}

[max-chars] {
	box-sizing: content-box;
	text-align: center;
}

// enlarge max-chars < 10
// e.g. max-chars 5 = 5.5ch
@for $i from 1 through 10 {
	[max-chars="#{$i}"] {
		width: #{$i + 0.5}ch;
	}
}

[max-chars="1"] {
	width: 1.5ch;
}

[max-chars="2"] {
	width: 2.5ch;
}

[max-chars="3"] {
	width: 3.5ch;
}

// damp max-chars > 10
// e.g. max-chars 30 = 26ch
@for $i from 10 through 40 {
	[max-chars="#{$i}"] {
		width: #{$i*(1 - ($i - 10)/30*0.15)}ch;
	}
}

* {
	box-sizing: border-box;
}

li > div {
	display: inline-flex;
}

.cui-root-layout {
	overflow: hidden;
}

// HorizontalLayout
.cui-horizontal-layout {
	display: flex;
	flex-shrink: 0;
	
	&.cui-maximize-horizontal {
		flex-direction: row;
		// overflow: hidden; cuts off outline in date-time picker: year picker

		> .cui-horizontal-layout-left {
			position: relative;
			// flex-shrink: 1; - too strong
			// overflow: hidden; cuts off outline in date-time picker: year picker
			// max-width: 45%; breaks CUI.confirm
		}
		> .cui-horizontal-layout-center {
			position: relative;
			flex: 1 1 auto;
			min-width: 0;
		}
	}

	&.cui-maximize-vertical {
		flex: 1 1 auto;
		max-width: 100%;
		min-height: 0;
	}

	&:not(.cui-maximize-horizontal) {
		flex-direction: row;
		// align-self: flex-start; anyoing in toolbar where you want align stretch
	}

	> .cui-horizontal-layout-center {
		// flex-direction: row; breaks collection manager detail
	}
}

.cui-horizontal-layout-left,
.cui-horizontal-layout-center,
.cui-horizontal-layout-right {
	display: flex;
	flex-direction: column;
	
	> .cui-label {
		padding: 0 $padding;
		
		& + .cui-label {
			padding-left: 0;
		}

		// &:first-child { makes no sense because this is not a vertical layout
		// 	padding-top: $compensating-padding;
		// }

		// &:last-child {
		// 	padding-bottom: $compensating-padding;
		// }
	}
}


// VerticalLayout
.cui-vertical-layout {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	
	&.cui-maximize-vertical {
		flex: 1 1 auto;
		min-height: 0;
		// overflow: hidden; // cuts off password input outline

		> .cui-vertical-layout-top,
		> .cui-vertical-layout-bottom {
			position: relative;
			overflow: hidden;
			flex-shrink: 0;
		}
		> .cui-vertical-layout-center {
			position: relative;
			flex: 1 1 auto;
			min-height: 0;
		}
	}

	&.cui-maximize-horizontal {
		// overflow: hidden; // cuts off password input outline
	}

	// weird rule - breaks popover pools
	// &:not(.cui-maximize-horizontal) {
	// 	align-self: flex-start;
	// }
}

.cui-vertical-layout-top,
.cui-vertical-layout-center,
.cui-vertical-layout-bottom {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
}

// Layout Absolute Horizontal
.cui-horizontal-layout.cui-absolute {
  position: relative;

  width: 100%;
  height: 100%;

  & > div {
		position: absolute !important; // overwrite "relative" from above
    top: 0;
    bottom: 0;
  }
  & > .cui-horizontal-layout-left {
    left: 0;
  }
  & > .cui-horizontal-layout-center {
    left: 0;  // overwritten by Layout.coffee
    right: 0;  // overwritten by Layout.coffee
  }

  & > .cui-horizontal-layout-right {
    right: 0;
  }
}


// Layout Absolute Vertical
.cui-vertical-layout {
	&.cui-absolute {
		position: relative;

		width: 100%;
		height: 100%;

		& > div {
			position: absolute !important; // overwrite "relative" from above
			left: 0;
			right: 0;
			width: 100%;
		}

		& > .cui-vertical-layout-top {
			top: 0;
		}

		& > .cui-vertical-layout-center {
			top: 0; // overwritten by Layout.coffee
			bottom: 0; // overwritten by Layout.coffee
		}

		& > .cui-vertical-layout-bottom {
			bottom: 0;
		}

	}
}


// Flexhandle

.cui-flex-handle-hidden {
	display: none;
}

.cui-flex-handle {
	position: relative;
	z-index: 2;
	flex-shrink: 0;
	-webkit-user-select: none;
	        user-select: none;

	&.cui-flex-handle-has-label:not(.cui-flex-handle-closed) {
		.cui-label {
			display: none;
		}
	}
}

.cui-flex-handle-row {
	width: 10px;
	margin: 0 -5px;
	
	&:not(.cui-flex-handle-closed) {
		cursor: ew-resize;
	}
	&.cui-flex-handle-closed {
		cursor: pointer;
	}
	&.cui-flex-handle-manual-size {
		// background-color: #64fdd8;
	}
	&.cui-flex-handle-has-label.cui-flex-handle-closed {
		width: 32px;
		margin: 0;
		background: white;
		
		.cui-label.cui-tmpl-label-rotate-90 {
			font-size: 14px;
			margin: 11px 0;
			margin-left: -2px;
			
			.cui-label-transform {
				transform: rotate(-90deg) translateY(150%);
				transform-origin: left bottom;
			}
		}
	}
}

.cui-flex-handle-column {
	height: 10px;
	margin: -5px 0;
	width: 100%;
	
	&.cui-flex-handle-has-label.cui-flex-handle-closed {
		margin: 0;
	}

	&:not(.cui-flex-handle-closed) {
		cursor: ns-resize;
	}

	&.cui-flex-handle-closed {
		cursor: pointer;
	}
}


.cui-flex-handle-stretched {
	flex: 1 1 auto !important;
}

.cui-flex-handle-hide-for-stretch {
	display: none;
}

.cui-is-manually-sized {
	flex-grow: 0 !important;
	flex-shrink: 0 !important;
	
	& + .cui-flex-handle + * {
		flex-shrink: 1 !important;
	}
}


.cui-tmpl-pane-fill-screen {
  transition: top ease-out 0.5s,right ease-out 0.5s,left ease-out 0.5s,bottom ease-out 0.5s;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;

	// Pane Fillscreen
	.cui-pane-fill-screen {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: white;
		
		.cui-pane-fill-screen-inner {
			width: 100%;
			height: 100%;
		}
	}

	// overwrite "style" set by code
  &.cui-pane-fill-screen-is-on {
    top: 0 !important;
    left: 0 !important;
    bottom: 0 !important;
    right: 0 !important;
  }
}

// BorderLayout

.cui-border-layout-north,
.cui-border-layout-south,
.cui-border-layout-west,
.cui-border-layout-east {
	&:empty {
		display: none;
	}
}

// Toolbar
.cui-toolbar {
	display: flex;
	min-height: $toolbar-height;
	justify-content: space-between;
	padding: 0 $padding/2;
	background: $toolbar-background;
	// needed in listview, to align all: content-box for all!
	box-sizing: content-box;

	& + & {
		padding-bottom: 1px;
	}
	
	&.cui-pane-toolbar {
		border-bottom: 1px solid $border;
		
		& + .cui-toolbar {
			padding-bottom: 0;
		}
	}
	
	.cui-horizontal-layout-left,
	.cui-horizontal-layout-right {
		flex-direction: row;
		min-width: 0;
	}

	.cui-horizontal-layout-center {
		flex-direction: row;
	}

	> div {
		&.cui-horizontal-layout-center {
			justify-content: center;
		}

		> .cui-maximize-horizontal {
			// in column direction this is solved by
			// align-items: stretch, but here
			// we need to overwrite this
			flex: 1 1 auto;
			align-self: stretch;
		}

		> .cui-toolbar {
			// nested toolbars do not get a padding
			padding: 0;
		}
	}

	.cui-horizontal-layout-left {
		> .cui-label {
			// reset padding: 0 $padding; in cui-horizontal-layout-left
			&:first-child {
				padding-left: 3px;
			}
			
			&:last-child {
				padding-right: 0;
			}
		}
	}

	.cui-horizontal-layout-right {
		margin-left: $gap;
		flex-shrink: 0;
		
		&:empty {
			margin-left: 0;
		}
	}

	&.cui-template-empty {
		display: none;
	}

	.cui-data-field-input {
		display: flex;
		align-items: center;
		min-width: 0;
		
		&.cui-vertical-layout {
			align-items: stretch;
			justify-content: center;
		}
		
		.cui-input {
			flex-grow: 0;
		}
	}

	.cui-button {
		align-self: stretch;
		height: auto; // for checkbox
		min-width: 0;
		flex-shrink: 1;
	}

	.cui-buttonbar {
		margin-bottom: 0;
		min-width: 0;
		
		.cui-button {
			.cui-button-visual {
				padding-left: $padding/2;
				padding-right: $padding/2;
			}

			&.cui-button-appearance-flat {
				.cui-button-visual {
					padding-left: 0;
					padding-right: 0;
				}
			}
		}
	}

	.cui-buttonbar-group {
		.cui-button,
		.cui-button:last-child {
			padding-right: 0;
		}
	}

	.cui-label {
		flex-shrink: 1;
		min-width: 0;
		align-self: center;
		cursor: default;

		.cui-label-content {
			flex-shrink: 1;
			min-width: 0;
			display: block;
		}
	}
}

.cui-result-navigation-toolbar {
	min-height: $toolbar-height;
}

// Pane
.cui-pane-header {
	flex-wrap: nowrap;
	border-bottom: 1px solid $border;
	padding-right: 0;
	
	.cui-label {
		font-size: 14px;
		height: 100%;
    cursor: default;
    display: flex;
    align-items: center;
	}

	.cui-horizontal-layout-left {
		> *:only-child {
			padding-right: 0;
		}
	}

	> .cui-horizontal-layout-center {
		margin-right: $padding/2;
	}

	> .cui-horizontal-layout-right {
		margin-left: 0;
		
		.cui-buttonbar:last-child {
			margin-right: $padding/2;
		}
	}

	.cui-toolbar {
		min-height: 0;
		background: none;
		border-bottom-width: 0;
		flex-wrap: nowrap;
	}
}

.cui-pane-footer {
	border-top: 1px solid $border;
	min-height: $toolbar-height;
	
	.cui-horizontal-layout-left,
	.cui-horizontal-layout-right {
		min-width: auto;
	}
	
	.cui-horizontal-layout-left .cui-buttonbar:first-child {
		margin-left: -$padding/2;
		
		.cui-button-href:first-child,
		.cui-button:first-child {
			padding-left: $padding/2;
		}
	}

	.cui-horizontal-layout-right .cui-buttonbar:last-child {
		margin-right: -$padding/2;

		.cui-button-href:last-child,
		.cui-button:last-child {
			padding-right: $padding/2;
		}
	}

	.cui-label {
		color: $secondary-color;
		font-size: 12px;
	}

	.cui-button-size-big .cui-button-visual {
		border-width: 1px;
	}
}

// Simple Pane
.cui-simple-pane {
	&--padded {
		> .cui-vertical-layout-center {
			padding: $padding;
		}
	}
}

// Data Table
.cui-data-table {
	border: 1px solid $border;
	flex-shrink: 1;
	
	> .cui-vertical-layout-center {
		flex-shrink: 1;
	}
	
	.cui-pane-footer {
		min-height: 0;
		padding: 0;

		.cui-button-button {
			.cui-button-visual {
				@include button-reset;
				color: hsl(205,11%,29%);
			  height: 23px;
			  padding: 0 $padding/2;
			  border-right: 1px solid hsl(205,8%,77%) !important;
			}
		  
		  &:cui-disabled {
		  	opacity: 1;
		  	
		  	.cui-button-visual * {
		  		opacity: 0.5;
		  	}
		  }

		  &:before {
		    display: none;
		  }
		}

		.cui-buttonbar .cui-button {
			margin: 0;
		}
	}

	input,
	textarea {
		min-width: 0;
	}
}

// Icons
.cui-icon-svg {
	fill: currentColor;
	vertical-align: bottom;
	pointer-events: none;
	flex-shrink: 0;
	transform: translateZ(0); // make em icons sharp in Firefox
}

.fa {
	font-size: 14px;
	pointer-events: none;
}

i.fa-spinner {
	width: 1em;
}

i.cui-spin-stepped {
	-webkit-animation: fa-spin 1s steps(8) infinite;
	   -moz-animation: fa-spin 1s steps(8) infinite;
	    -ms-animation: fa-spin 1s steps(8) infinite;
	     -o-animation: fa-spin 1s steps(8) infinite;
	        animation: fa-spin 1s steps(8) infinite;
}

// adjust close x size
.fa-times-thin:before {
	font-size: 1.58em;
	content: '\00d7';
	display: block;
  margin-top: -0.09em;
}

// adjust arrow-left, arrow-right size
.fa-angle-right,
.fa-angle-left,
.fa-angle-down,
.fa-angle-up {
	&:before {
		font-size: 1.34em;
	}
}

// compensate right arrow spacing
.fa-angle-right {
	margin-left: 2px;
}

// compensate left arrow spacing
.fa-angle-left {
	margin-right: 2px;
}

// compensate down arrow spacing
.fa-angle-down {
	margin-bottom: -1px;
}

// adjust play icon weight
.fa-play {
	margin-right: -3px;
}

// Button / Select
.cui-button,
.cui-button-href {
	// max-width: 100%; makes button icons unsharp (datepicker)
	cursor: pointer;
}

.cui-button-href.cui-button-appearance-link {
	.cui-button-right {
		flex-shrink: 0;
		// nudge external link icon up a bit
		margin-top: -1px;
		
		&:empty {
			display: block;
		}
	}
}

.cui-button-visual {
	display: flex;
	align-items: center;
	justify-content: center;
	max-width: 100%;
}

.cui-button-button,
.cui-button-select {
	flex: 0 0 auto;
	flex-direction: column;
	align-self: flex-start;
	align-items: center;
	justify-content: center;
	display: inline-flex; // if a button is not in a flex container, behave like "inline-block"
	white-space: nowrap;
	max-width: 100%;
	
	.cui-button-visual {
	  padding: 0 $padding;
	  height: 24px;
	  line-height: 22px;
	  color: $button-color;
	  background: $button-background;
	  border: 1px solid $button-border;
	  border-radius: $button-radius;
	}

	&:hover .cui-button-visual {
	  border-color: $highlight-color;
	  color: $highlight-color;
	}

	&:active .cui-button-visual {
	  border-color: darken($highlight-color, 10%);
	  color: darken($highlight-color, 10%);
	}

	&.cui-disabled {
	  cursor: default;
	  
		.cui-button-visual {
		  color: $disabled-color;
		  border-color: $button-border;
	  }
	}

	&.cui-button-appearance-important, // removed [role] - makes it too specific
	&.cui-button--primary,
	&.cui-active {
		.cui-button-visual {
	  	color: white;
	  	background: $highlight-color;
	  	border-color: darken($highlight-color, 7%);
	  }

	  &:hover {
		  .cui-button-visual {
		  	background: lighten($highlight-color, 11%);
		  	border-color: lighten($highlight-color, 4%);
	  	}
	  }
	}

	&:focus {
		outline: none;
		
		.cui-button-visual {
			@include border-focus;
		}
	}
}

.cui-button-appearance-flat {
	align-self: auto;
	
	.cui-button-visual {
		@include button-reset;
		border-radius: $button-radius;
		color: desaturate($highlight-color, 80%);
	}
	
  &:hover:not(.cui-disabled) {
  	.cui-button-visual {
  		color: desaturate($highlight-color, 80%);
  	}
  }

  &.cui-active {
  	.cui-button-visual {
  		color: desaturate($highlight-color, 80%);
  		background: none;
  	}

  	&:hover {
  		.cui-button-visual {
  			background: none;	
  		}
  	}
  }

  &:focus {
  	.cui-button-visual {
  		@include focus;
  	}
  }
}

.cui-button-select {
	.cui-button-visual {
		padding: 0 4px 0 8px;
	}

	.cui-button-center {
		padding-right: 6px;
		
		[max-chars] {
			text-align: inherit;
		}
	}
}

.cui-button-left,
.cui-button-center,
.cui-button-right {
	display: flex;
	flex: 0 0 auto;
	justify-content: center;
	padding: 0 3px;

	&:empty {
		display: none;
	}
}

.cui-button-center {
	flex-shrink: 1;
	min-width: 0;
	
	span {
		@include ellipsis;
	}
}

.cui-button-size-mini {
	font-size: 12px;
  height: 26px;

  &.cui-button-appearance-flat {
  	height: auto;
  }

  .cui-button-visual {
  	height: 18px;
  	padding: 0 $padding/4;
  }

  .fa {
  	font-size: 11px;
  }

  .cui-icon-svg {
  	transform: scale(0.75);
  }
}

.cui-button-size-big {
	font-size: 11px;
	height: 60px;

	&.cui-button-appearance-flat {
		height: auto;
	}

	.cui-button-visual {
		line-height: 18px;
		height: auto;
		flex-direction: column;
		border-width: 0;
		padding: 0 $padding/2;
	}

	.cui-button-left {
		padding: 3px;
	}

	.fa {
		font-size: 20px;
	}
}

.cui-button-size-bigger {
	font-size: 18px;
	height: 43px;

	&.cui-button-appearance-flat {
		height: auto;
	}
}

a[role="button"].cui-button-appearance-link {
	height: initial;
	> .cui-button-center {
		word-break: break-all;
	}
}

.cui-button-appearance-link[role] {
	display: inline-flex;
	
	.cui-button-visual {
		@include button-reset;
		color: $highlight-color;
		line-height: 18px;
	}

	.cui-button-center {
		padding: 0;
	}
}


// Checkbox
.cui-checkbox {
	display: flex;
	align-items: center;
	
	&--icon {
		.cui-button-checkbox {
			.cui-button-left i {
				border: none;
				background: none;
				font-size: 14px;
				opacity: 0.2;
			}

			&.cui-active {
				.cui-button-left i {
					background: none;
					color: inherit;
					text-shadow: none;
					opacity: 1;
				}
			}
		}
	}
}

.cui-button-checkbox {
	display: flex;
	flex-direction: row;
	cursor: pointer;
	height: 24px;
	line-height: 24px;
	white-space: initial;
	align-self: flex-start;
	max-width: 100%;
	// flex: 1; don't grow (horizontally) because only the text should be clickable
	
	[max-chars] {
		text-align: inherit;
	}

	&.cui-disabled {
		cursor: default;
		color: $disabled-color;
		
		.cui-button-left {
			opacity: 0.27;	
		}
	}

	&:focus {
		outline: none;

		.cui-button-left span,
		.cui-button-left i {
			@include border-focus;
		}
	}

	&.cui-active {
		.cui-button-left i {
			position: relative;
			background: hsl(240,2%,61%);
			border-color: hsl(240,3%,58%);
			color: white;
			text-shadow: 0 1px rgba(0,0,0,.2);
		}

		&[role="radio"] {
			.cui-button-left i {
				color: transparent;
				text-shadow: none;

				// use radial gradient instead of border-radius
				// for a nice round form (otherwise its more of an egg)
				border-radius: none;
				border-color: transparent;
				background: radial-gradient(hsl(240,2%,61%), hsl(240,3%,58%));

				&:after { // radio dot
					content: "";
					position: absolute;
					left: 50%;
					top: 50%;
					width: 6px;
					height: 6px;
					margin: -3px 0 0 -3px;
					border-radius: 100%;
					background: white;
					box-shadow: 0 1px rgba(0,0,0,.2);
				}
			}
		}
	}

	.cui-button-visual {
		justify-content: flex-start;
		flex: 1;
	}

	.cui-button-left {
		padding: 0 2px 0 0;
		// empty checkbox: span
		// filled checkbox: i
		span,
		i {
			display: inline-block;
			width: 12px;
			height: 12px;
			border: 1px solid hsl(0,0%,72%);
			border-top-color: hsl(0,0%,65%);
			border-bottom-color: hsl(0,0%,72%);
			background: white;
			font-size: 11px;
			line-height: 11px;
			border-radius: 2px;
			box-shadow: 0 1px rgba(0,0,0,.05) inset;
		}
	}

	.cui-button-center {
		min-width: 0;
		flex: 1;
		justify-content: flex-start;
	}

	&[role="radio"] {
		.cui-button-left {
			span,
			i {
				width: 14px;
				height: 14px;
				border-radius: 100%;
			}
		}
	}
}

// Select

.cui-select {
	.cui-button-center:empty {
		display: flex;

		&:after {
			content: '-';
			padding: 0 $padding/4;
		}
	}

	&[max-chars="2"] {
		width: auto;

		.cui-button-center span {
			width: 2.5ch;
		}
	}

	&[max-chars="4"] {
		width: auto;

		.cui-button-center span {
			width: 4ch;
		}
	}
}

// Panel
.cui-panel {
	border-bottom: 1px solid $soft-border;
	
	& + &,
	&:first-child {
		.cui-panel-header {
			border-top: none;
		}
	}

	&:last-child {
		border-bottom: none;
	}

	&.cui-panel-closed {
		border-bottom: none;
		
		> .cui-panel-body {
			display: none;
		}
	}
}

.cui-panel-header {
	border-top: 1px solid $soft-border;
	border-bottom: 1px solid $soft-border;
	position: relative;
	height: $toolbar-height;
	background: $toolbar-background;
	flex-shrink: 0;

	.cui-button {
		width: 100%;
		height: 100%;
		align-items: stretch;
		
		.cui-button-visual {
			border: none;
			background: none;
			border-radius: 0;
			justify-content: flex-start;
			color: inherit;
			padding: 0 $padding;
			height: auto;
			line-height: 1;
		}

		&.cui-active:hover {
			.cui-button-visual {
				background: none;
			}
		}

		.cui-button-left {
			width: 22px;
		}

		.fa-angle-right {
			padding-left: 3px;
		}

		.fa-angle-right {
			margin-top: -1px;
		}
	}
}


// Label
.cui-label {
	display: inline-flex;
	flex: 0 0 auto;
	align-items: center;
	max-width: 100%;

	&.cui-tmpl-label-rotate-90 {
		align-items: flex-end;
		white-space: nowrap;
		margin: $padding/2 0;
		flex-shrink: 0;
		max-width: none;
		
		&:before {
			content: "";
			float: left;
			margin-top: 100%;
		}
		
		> .cui-label-transform {
			transform: rotate(-90deg)  translateX(-3px) translateY(100%);
			transform-origin: left bottom;
		}

		.cui-label-content {
			white-space: nowrap !important;
		}
	}

	&-icon {
		&:empty {
			display: none;
		}

		.fa {
			line-height: 18px;
		}
	}

	&-size-mini {
		font-size: 11px;
		line-height: 14px;
	}

	&-size-big {
		.cui-label-icon {
			.fa {
				font-size: 21px;
			}
		}
	}

	&-icon:not(:empty) + .cui-label-content:not(:empty) {
		padding-left: $padding/2;
	}

	&-content {
		flex: 0 0 auto;
		max-width: 100%;
		@include ellipsis;

		&:empty {
			display: none;
		}

		p {
			&:first-child {
				margin-top: 0;
			}

			&:last-child {
				margin-bottom: 0;
			}
		}

		// highlight
		em {
			background: hsl(55,100%,60%);
			font-style: normal;
		}
	}
}

// Label: Centered
.cui-label-centered {
	flex: 1;
	display: flex;
	align-items: center;
	justify-content: center;
	
	.cui-label-content {
		text-align: center;
	}
}

// Label: Markdown
.cui-label-markdown .cui-label-content {
	display: block;

	h1, h2, h3, h4, h5, h6 {
	  font-weight: normal;
	  margin: 0 0 $padding;
	}

	h1 {
	  font-size: 24px;
	  line-height: 30px;
	}

	h2 {
	  font-size: 20px;
	  line-height: 25px;
	}

	p,
  pre,
  blockquote {
    margin: 0 0 16px;
  }

  & > p,
  & > pre,
  & > blockquote {
    &:last-child {
      margin-bottom: 0;
    }
  }

  blockquote {
    padding: 8px 12px;
    border-left: 5px solid #eee;
  }

  code {
    border: none;
    background: hsl(0,0%,97%);
    white-space: pre-wrap;
  }

  pre {
    padding: 12px 15px;
    font-size: 13px;
    line-height: 1.45;
    background: hsl(0,0%,97%);
    white-space: pre-wrap;
    border-radius: 3px;
    border: none;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    margin-top: 6px;
    margin-bottom: 6px;
    border: 0;
    border-top: 1px solid #dfdfdf;
  }
}

// Label: Multiline
.cui-label-multiline {
	align-self: stretch;
	max-width: 100%; // prevent overflow when its the child of a flex parent

	& + & {
		margin-top: $padding;
	}

	&:not(.cui-label-markdown) {
		// word-break: normal;
		word-break: break-all;
		// this does not work in IE, but will
		// be ignored by IE, so we are good
		word-break: break-word;
		
		.cui-label-content {
			white-space: pre-wrap;
		}
	}

	> .cui-label-content {
		flex: 1 1 auto;
		white-space: normal;
	}

	.cui-label-content span {
		// white-space: normal;
		// white-space has to pre-wrap - otherwise it breaks the whole concept of a multiline label
		// example: collection description
	}
}

// Label: Manage Overflow

.cui-label-manage-overflow {
	> .cui-label-content {
		max-height: 75px;
		overflow: hidden;
	}
	
	&.cui-label--overflow-hidden {
		> .cui-label-content > .cui-label-manage-overflow-button-container {
			padding-top: 18px;
			margin-top: -18px;
		}
	}
}

.cui-label-manage-overflow-content-container {
	overflow: hidden;
	flex-shrink: 1;

	> span {
		white-space: pre-wrap;
		word-break: normal;
	}
}

.cui-label-manage-overflow-button-container {
	flex-shrink: 0;
	display: flex;
	justify-content: flex-end;
	position: relative;
	background-image: linear-gradient(hsla(0,0%,100%,0), hsla(0,0%,100%,1));
	background-size: 100% 18px;
	background-repeat: no-repeat;
}

// Label: Placeholder
.cui-empty-label {
	color: $muted-color;
	font-style: italic;
	padding: $padding/2;
	margin: 0;
	cursor: default;
	
	.cui-label-content {
		display: inline-block;
	}
}


// Buttonbar
.cui-buttonbar {
	display: flex;
	align-items: center;
	justify-content: space-between;

	// > *:not(:last-child) {
	// 	margin-right: $gap;
	// }
	
	.cui-label {
		margin: 0 $small-gap;
		align-self: center;
	}

	.cui-label-content {
		align-self: center; // Date-Time picker month label in footer
	}

	> .cui-button,
	> .cui-button-button,
	> .cui-data-field-input {
		+ .cui-button,
		+ .cui-button-button,
		+ .cui-data-field-input,
		+ .cui-buttonbar-group {
			margin-left: $small-gap;
		}
	}

	.cui-button-href {
		height: 100%;
	}

	.cui-buttonbar-group + .cui-button {
		margin-left: $small-gap;
	}
}

// Buttonbar Group
.cui-buttonbar-group {
	display: flex;
	align-self: stretch; // use full height for bigger click area for buttons (example: tabs)
	
	& + & {
		margin-left: $small-gap;
	}

	> * {
		position: relative;
		margin-left: -1px;

		&:first-child {
			margin-left: 0;
			
			.cui-button-visual {
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}

			&:before {
				display: none;
			}
		}

		&:last-child .cui-button-visual {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}

		&:not(:first-child):not(:last-child) .cui-button-visual {
			border-radius: 0;
		}

		&:only-child .cui-button-visual {
			border-radius: $button-radius;
		}

		&:hover,
		&.cui-active {
			z-index: 1;
		}
	}

	> .cui-active + .cui-button:hover {
		z-index: initial;
	}

	.cui-label {
		border: 1px solid $button-border;
		background: $foreground;
		margin-left: -1px;
		margin-right: 0;
		padding: 0 7px;
		color: $secondary-color;
		
		&-size-mini {
			height: 18px;
		}
	}

	> .cui-data-field {
		margin-left: -1px;

		&:first-child {
			margin-left: 0;
		}
		
		& + *:before {
			display: none;
		}
	}
}

// Input
.cui-input {
	// state classes:
	// cui-input-invalid
	// cui-input-has-no-user-input
	// cui-input-has-user-input
	// cui-has-focus
	// cui-has-check-input
	//
	// hint:
	// cui-input-has-invalid-hint
	// cui-input-has-valid-hint
	// cui-input-has-input-hin:
	//

	&.cui-input-has-check-input {
		&.cui-input-invalid {
			input {
				border-color: hsl(0,90%,60%);
				background: hsla(0,90%,74%, 0.15);
			}
		}
	}

	input,
	textarea {
		padding: 0 7px;
		line-height: 22px;
		min-height: 22px; // for IE because it doesn't use the line-height
		outline: none;
		vertical-align: bottom;
		
		&:focus {
			@include border-focus;
		}

		&::-webkit-input-placeholder {
			color: $input-placeholder;
		}

		&::-moz-input-placeholder {
			color: $input-placeholder;
		}

		&:-ms-input-placeholder {
			color: $input-placeholder;
		}

		&::-ms-input-placeholder {
			color: $input-placeholder;
		}

		&::placeholder {
			color: $input-placeholder;
		}
	}

	textarea {
		padding-top: 3px;
		padding-bottom: 3px;
		line-height: 16px;
		height: 100px;
	}

	&.cui-has-focus {
		input,
		textarea {
			@include border-focus;
		}
	}

	// hint
	+ .cui-label {
		margin-top: 5px;
		font-size: 12px;
		color: $muted-color;
	}
}

.cui-input-content-size {
	textarea {
		height: 24px;
		resize: none;
	}
}

.cui-form-hint {
	margin-top: 5px;
	font-size: 12px;
	color: $muted-color;
}

.cui-input-valid-hint {
	font-size: 11px;
	margin-top: $padding/4;
}

::-ms-clear {
  display: none;
}

// Layer
.cui-tmpl-layer-root {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 1;
	pointer-events: none;
	
	.cui-layer {
		position: absolute;
		pointer-events: auto;
	}

	// centered gets placed by the browser
	&[cui-placement="c"] {
		.cui-layer {
			position: static;
			margin: 0;
		}
	}

	&[cui-fill-space="both"] {
		.cui-layer {
			width: 100%;
			height: 100%;
		}
	}

	&[cui-fill-space="horizontal"] {
		.cui-layer {
			width: 100%;
		}
	}

	&[cui-fill-space="vertical"] {
		.cui-layer {
			height: 100%;
		}
	}
}

.cui-layer-backdrop-policy-modal,
.cui-layer-backdrop-policy-click {
	pointer-events: auto;
}

.cui-layer {
	min-width: 200px;
	min-height: 30px;
	max-width: calc(100% - #{2*$padding});
	max-height: calc(100% - #{2*$padding});
	display: flex;
	flex-direction: column;
	overflow: hidden;
	background: white;
	margin: 10px;
	outline: none;
	border-radius: 5px;
	// to make sure that the border-radius will cut off all child backgrounds
	// http://stackoverflow.com/questions/5736503/how-to-make-css3-rounded-corners-hide-overflow-in-chrome-opera
	opacity: 0.9999;
	box-shadow:
		0 4px 20px hsla(205,5%,30%,.4),
		0 2px 4px hsla(0,0%,0%,.1);
	
	> .cui-simple-pane,
	> .cui-pane {
		// layer-header
		> .cui-vertical-layout-top > .cui-pane-header {
			background: $layer-header-background;
			min-height: $toolbar-height;
			border-radius: 5px 5px 0 0;
			border-color: $layer-header-border;
		}

		// layer-body
		> .cui-vertical-layout-center {
			overflow: auto;
			-webkit-overflow-scrolling: touch;
			
			.cui-form {
				flex-shrink: 0;
			}
			
			> .cui-form {
				margin: 0;
			}
		}

		// layer-footer
		> .cui-vertical-layout-bottom > .cui-pane-footer {
			border-top-color: $layer-footer-border;
			background: $layer-footer-background;
			border-radius: 0 0 5px 5px;
		}
	}

	.cui-toolbar {
		min-height: $toolbar-height;
	}
	
	.cui-empty-label {
		max-width: 540px;
		padding: 0;
	}

	.cui-form-table {
		&.cui-form-table-has-not-left-column {
			> .cui-tr > .cui-form-value > .cui-data-field {
				&.cui-data-table {
					border: none;
				}

				> .cui-list-view {
					margin: -15px -20px;
				}
			}	
		}

		.cui-data-field {
			width: auto;
		}
	}
}

.cui-layer-pointer {
	position: absolute;
	z-index: 1;
	width: 33px;
	height: 16px;
	margin: 6px;
	overflow: hidden;

	&:after { // arrow (north)
		content: "";
		position: absolute;
		left: 5px;
    top: 7px;
    width: 18px;
    height: 18px;
		background: $layer-background;
		box-shadow:
			0 0 0 1px hsla(0,0%,0%,0.1),
			3px 3px 14px hsla(0,0%,0%,0.1);
		transform: rotate(45deg);
	}
}

.cui-layer-pointer--n:after {
	background: $layer-header-pointer-background;
}

.cui-layer-pointer--s:after {
	top: -9px;
	background: $layer-footer-background;
}

.cui-layer-pointer--n,
.cui-layer-pointer--s {
	margin: 0 6px;
}

.cui-layer-pointer--e,
.cui-layer-pointer--w {
	width: 10px;
	height: 37px;
	margin: 6px 0;
}

.cui-layer-pointer--e:after {
	left: -13px;
}

.cui-layer-root-menu .cui-layer-pointer {
	height: 12px;
	
	&.cui-layer-pointer--e,
	&.cui-layer-pointer--w {
		width: 12px;
		height: 37px;
	}
	
	&:after {
		background: white;
	}
}

.cui-layer-backdrop {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	display: flex;
	
	&--visible {
		background: radial-gradient(hsla(205,30%,20%,.4), hsla(205,30%,20%,.6));
	}

	> div {
		flex: 1 1 auto;
		background-size: cover;
		background-repeat: no-repeat;
	}
}

.cui-layer-backdrop-body-clone {
	position: absolute;
	overflow: hidden;

	> *:first-child {
		position: absolute;
	}
}

.cui-tmpl-layer-root.cui-layer-root-backdrop-blur {
	> .cui-tmpl-layer-backdrop
	{
		-webkit-filter: blur(5px);
		-moz-filter: blur(5px);
		-ms-filter: blur(5px);
		filter: blur(5px);
		overflow: hidden;
	}

	> .cui-layer {
		// blur effect, make layer transparent
		background-color: rgba(255, 255, 255, 0.39);

		.cui-tmpl-item-list-body {
			.cui-button {
				background-color: transparent;
			}
		}
	}
}

// Modal

.cui-modal {
	> .cui-simple-pane {
		// layer-footer
		> .cui-vertical-layout-bottom > .cui-pane-footer {
			border-radius: 0 0 5px 5px;
			
			// unset normal spacing
			.cui-buttonbar > *:not(:last-child) {
				margin-right: 0;
			}
			
			.cui-button {
				padding: $padding/2;
				
				&:last-child {
					padding-right: $padding/2;
				}
				
				&:first-child {
					padding-left: $padding/2;
				}
			}
		}
	}
}

// Confirmation Dialog
.cui-confirmation-dialog .cui-layer {
	max-width: 500px;
}

// Confirmation Choice
.cui-confirmation-choice .cui-layer {
	max-width: 300px; // don't make this bigger, make the text shorter
	
	> .cui-simple-pane {
		> .cui-vertical-layout-center {
			margin: $padding/2;
		}
	}
}

// Alert Problem (red)
.cui-confirmation-dialog .cui-alert-problem {
}

// Spinner
.cui-spinner {
	min-width: 0;
}

// Tooltip
.cui-layer-root-tooltip .cui-layer-pointer {
	width: $padding / 2;
	height: $padding / 2;

	&:after {
		display: none;
	}
}

.cui-tooltip {
	max-width: 260px;
	max-height: 100px;
	min-width: 0;
	min-height: 0;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	background: $layer-background;
	border-radius: 2px;
	box-shadow:
		0 0 0 1px hsla(0,0%,0%,0.1),
		0 7px 14px hsla(0,0%,0%,0.1);
	cursor: default;

	.cui-label {
		font-size: 11px;
    line-height: 14px;
    padding: 3px 6px;
	}

	> .cui-simple-pane > .cui-vertical-layout-center {
		padding: 0;
		
		> .cui-label:only-child {
			margin: 0;
		}
	}
}


// Toaster
.cui-layer-root-toaster .cui-layer {
	font-size: 14px;
	width: auto;
	max-width: none;
	min-width: 0;
	user-select: none;
	cursor: default;

	> .cui-layout > .cui-vertical-layout-center {
		padding: 0 $padding;
	}
}

// Menu
.cui-menu {
	min-height: 0;
	min-width: 0;
  background: white;
  border-radius: 4px;
  padding: 4px 0;
	height: auto; // WEIRD reset: cui-menu on selects gets class button-select
	overflow: auto;
	-webkit-overflow-scrolling: touch;

	.cui-item-list {
		font-size: inherit;
	}

	.cui-tmpl-item-list-body {
		> .cui-label {
			max-width: 200px;
		}
	}
}

.cui-menu-divider {
	margin: 6px 0;
}

.cui-button--has-caret {
	.cui-button-right {
		margin-left: auto;
	}
}

// ItemList
.cui-item-list {
	.cui-label {
	  cursor: default;
	  padding: $padding+3px $padding 3px;
	  font-size: 0.9em;
	  color: hsl(205,3%,50%);
	  
	  &.cui-empty-label {
	  	padding: 6px $padding;
	  }
	  
	  &:first-child {
	  	padding-top: 6px;
	  }
	  
	  &:last-child {
	  	padding-bottom: 6px;
	  }
	}

	.cui-button,
	.cui-button-href {
	  align-items: stretch;
	  
	  .cui-button-visual {
	  	justify-content: flex-start;
		  padding: 0 $padding;
			border: none;
			border-radius: 0;
			height: 26px;
			line-height: 26px;
	  }

	  &:hover:not(.cui-disabled),
	  &:active:not(.cui-disabled) {
	  	.cui-button-visual {
	  		color: hsl(205,7%,22%);
				background: hsl(205,17%,98%);
			}
	  }

	  &.cui-active:not(.cui-disabled),
	  &.cui-active:hover:not(.cui-disabled) {
	  	.cui-button-visual {
	  		color: $on-highlight-color;
	  		background: $highlight-color;
	  		border-color: $highlight-color;
	  	}
	  }

	  .cui-button-center {
	    padding: 0;
	  }
	}

	.cui-options .cui-button {
		height: 26px;
		line-height: 26px;
		flex: 1;
	}
}

.cui-item-list-divider {
	height: 1px;
	background: hsl(210,11%,93%);
}

.cui-tmpl-item-list-body {
	display: flex;
	flex-direction: column;

	> div {
		flex: 0 0 auto;
	}

	a[role="button"],.cui-button
	{
		align-self: stretch;
	}

	&.cui-item-list--has-button-left {
		// this button always has a left side		
		.cui-button-left {
			padding-right: $padding;
			width: 13px;
			box-sizing: content-box;
		}
		// add space to button without icon
		.cui-button-center:first-child {
			padding-left: 3px + $padding + 13px;
		}
	}
}

// Popover
.cui-popover {
	background: white;
	min-width: 247px;

	.cui-panel:last-child {		
		&.cui-panel-closed .cui-panel-header {
			border-bottom: none;
		}
	}
}

// Hint Popover

$popover-hint-background: hsl(205,15%,43%);

.cui-layer-root-hint-popover .cui-layer-pointer {
	height: 12px;
	
	&.cui-layer-pointer--e,
	&.cui-layer-pointer--w {
		width: 12px;
		height: 37px;
	}
	
	&:after {
		background: $popover-hint-background;
	}
}

.cui-hint-popover {
	min-width: 0;
	background: $popover-hint-background;
	color: white;
	padding: 7px 10px;
	
	.cui-button-appearance-link[role] .cui-button-visual {
		color: lighten(desaturate($highlight-color, 10%), 20%);
	}

	.cui-empty-label {
		color: lighten($muted-color, 14%);
	}
}

// WaitBlock
.cui-tmpl-wait-block {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 1;
	display: flex;
	
	.cui-wait-block-glass {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: $foreground;
	}

	.cui-wait-block-inner {
		display: flex;
		flex: 1 1 auto;
		position: relative;
		
		.cui-wait-block-header {
			display: flex;
			flex: 1 1 auto;
			justify-content: center;
			align-self: center;
			
			.cui-label {
				.cui-label-icon i {
					font-size: 21px;
			    width: 21px;
			    height: 21px;
			    line-height: 21px;
			  }
				
				.cui-label-content {
					padding-left: $padding;
				}
			}
		}

		.cui-wait-block-content {
			display: none;
		}
	}
}

// Tabs
.cui-tabs {
	.cui-tabs-active-marker {
		display: none;
		position: absolute;
		bottom: 0;
		// left + width are set by javascript
		height: 3px;
		background: yellow;
		transition: width 0.3s ease, left 0.3s ease;
	}
	> .cui-vertical-layout-center {
		flex-grow: 1;
		
		> .cui-tmpl-tabs-bodies {
			display: flex;
			flex: 1 1 auto;
			overflow: hidden;
		}
	}
}

.cui-tabs-pane-header {
	min-height: $toolbar-height;
	background: $toolbar-background;
	padding: 0;
	
	&.cui-tabs-pane-header--mini {
		background: none;
		border-bottom-width: 0;
	}
	
	.cui-buttonbar {
		min-width: 0;
	}

	.cui-horizontal-layout-center {
		overflow: hidden;
		flex-grow: 0;
		justify-content: center;
		margin-right: 0;
		padding: 0 $padding;
	}

	/* overflowing tabs */
	&.cui-tabs-pane-header--overflow {
		> .cui-horizontal-layout-center {
			padding-right: 0;
			margin-right: 0;
			
			.cui-tab-header-button:last-child {
				.cui-button-visual {
					border-top-right-radius: 0;
					border-bottom-right-radius: 0;
					border-right: none;
				}
			}
		}
	}
}

.cui-tab {
	margin-left: 0 !important;
	// border-bottom: 1px solid hsl(210,11%,93%); // no border bottom plz says Felix 19.10.16
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	
	&.cui-tab-hidden {
		display: none;
	}
}

.cui-toolbar .cui-tab-header-button-overflow,
.cui-toolbar .cui-tab-header-button {
	font-size: inherit;
		
	.cui-button-visual {
		background: none;
		color: hsl(205,15%,43%);
		height: 26px;
		line-height: 24px;
		min-width: 40px;
		padding: 0 $padding;
		border-radius: 0;
		border: 1px solid;	
	}

	&.cui-button-size-mini {
		height: auto;

		.cui-button-visual {
			height: 24px;
			line-height: 23px;
		}
	}

	&:first-child .cui-button-visual {
		border-top-left-radius: 3px;
		border-bottom-left-radius: 3px;
	}

	&:last-child .cui-button-visual {
		border-top-right-radius: 3px;
		border-bottom-right-radius: 3px;
	}

	&.cui-active {
		&,
		&:hover {
			.cui-button-visual {
				color: $on-highlight-color;
				background: hsl(205,15%,43%);
				border-color: hsl(205,15%,43%);
			}
		}
	}
}

.cui-toolbar {
	&.cui-tabs-pane-header--scroll-at-end {
		.cui-tab-header-button-overflow .cui-button-visual {
			box-shadow: none;
		}
	}

	.cui-tab-header-button-overflow {
		align-self: center;
		padding-right: $padding;
		position: relative;
		z-index: 1; // to overlap active buttons
		
		.cui-button-visual {
			border-top-left-radius: 0 !important;
			border-bottom-left-radius: 0 !important;
			box-shadow:
				-1px 0 hsla(0,0%,0%,.10),
				-2px 0 hsla(0,0%,0%,.08),
				-3px 0 hsla(0,0%,0%,.05),
				-4px 0 hsla(0,0%,0%,.02),
				-5px 0 hsla(0,0%,0%,.01);
		}
	}
}


$table-data-height: 26px;
$table-data-padding: 4px;

// ListView
.cui-list-view {
	flex-shrink: 1;
	min-height: 0;
	
	.cui-label-size-normal {
		line-height: $table-data-height - $table-data-padding*2;
	}

	.cui-data-field-output-label {
		line-height: 24px;	
	}

	> .cui-vertical-layout-center {
		flex-shrink: 1;
	}

	> .cui-vertical-layout-bottom {
		.cui-toolbar {
			border-top: 1px solid $border;
		}
	}
	
	// nested list-view
	.cui-list-view {
		background: $foreground;
	}
}

.list-view-header-row {
	.cui-label {
		align-items: flex-end;
	}
}

.cui-tmpl-list-view-tool-row-move-target {
	height: 4px;
	background: $highlight-color;
	margin-top: -2px;
	position: absolute;
	z-index: 4;
}

.cui-tmpl-list-view-tool-row-move-marker {
	position: absolute;
	z-index: 4;
	background: $highlight-color;
	opacity: 0.3;	
}

.cui-lv-td {
	padding: $table-data-padding $padding;
	width: 125px;
	min-height: $table-data-height - 2*$table-data-padding;
	overflow: hidden;
	flex-shrink: 0;
	display: flex;
	align-items: flex-start;
	box-sizing: content-box;

	&-rotate-90 {
		width: 12px;
		
		.cui-tree-node-spacer {
			display: none;
		}
		
		> .cui-tmpl-label-rotate-90 {
			word-break: break-all;
			margin-left: -3px;
		}

		.cui-data-field {
			flex-grow: 0;
		}
	}

	&-fill {
		// UNCLEAR - why padding? has to be reset when its not used
		//padding: 2px;
		min-height: 0;
	}

	&-max {
		flex-grow: 1;
	}

	.cui-label-multiline {
		// UNCLEAR - doesn't look good on single line multiline labels
		// align-self: flex-start;
	}
}

.cui-lv-th {
	cursor: default;
}

// List View Grid

.cui-list-view-grid {
	font-size: 12px;
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	position: relative;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
}

.cui-list-view-grid-quadrant-0,
.cui-list-view-grid-quadrant-1 {
	.cui-lv-td {
		position: relative;

		&:after { // table-head line
			content: "";
			position: absolute;
			right: 0;
			top: 2px;
			bottom: 2px;
			width: 1px;
			background: $table-header-border;
		}
	}
}

.cui-list-view-grid-quadrant-1 {
	.cui-lv-td:last-child:after {
		display: none;
	}
}

.cui-list-view-grid-has-fixed-rows {
	.cui-list-view-grid-inner-top {
		// UNCLEAR: too often this list-view-grind-inner-top is unused and then a wild border appears
		// Example: table search results with Serienbilder
		border-bottom: 1px solid $table-border;
	}
}

// &.cui-maximize-vertical {
//	> .cui-vertical-layout-center {
//		> .cui-list-view-grid {
//			height: 100%;
//		}
//	}
// }

// &.cui-maximize-horizontal {
//	> .cui-vertical-layout-center {
//		> .cui-list-view-grid {
//			width: 100%;
//		}
//	}
// }

.cui-list-view-grid-inner-top {
	flex: 0 0 auto;
	display: flex;
	
	// breaks the headers - they should be left aligned
	// .cui-lv-td {
	// 	justify-content: flex-end;
	// }
}

.cui-list-view-grid-inner-bottom {
	flex: 1 1 auto;
	display: flex;
}

.cui-list-view-grid-quadrant-0 {
	flex: 0 0 auto;
	overflow: hidden;
}

// eg. header
.cui-list-view-grid-quadrant-1 {
	flex: 1 1 auto;
	overflow: hidden;
	
	.cui-button {
		height: 100%;
		flex: 1;
		align-items: stretch;
		
		.cui-button-left {
			padding-right: 6px;
		}

		.cui-button-center {
			flex: 1;
			justify-content: flex-start;
		}
		
		.cui-button-visual {
			@include button-reset;
		}
	}

	.cui-label {
		font-weight: bold;
		
		&-multiline {
			align-self: flex-end;
			max-width: none;
		}
	}

	.cui-lv-td {
		align-items: flex-end;
	}
}

.cui-list-view-grid-quadrant-2 {
	flex: 0 0 auto;
	overflow: hidden;
}

.cui-list-view-grid-quadrant-3 {
	flex: 1 1 auto;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
}

.cui-list-view-grid-quadrant-2,
.cui-list-view-grid-quadrant-3 {
	.cui-lv-tr-outer {
		position: relative;
			
		// also apply background to the cell for overflow
		.cui-lv-tr,
		.cui-lv-td {
			background: inherit;
		}
		
		&:nth-child(even) {
			background: $zebra-color;
			
			.cui-label-manage-overflow-button-container {
				background-image: linear-gradient(#{transparentize($zebra-color, 1)}, #{transparentize($zebra-color, 0)});
			}

			&.cui-selected {
				.cui-label-manage-overflow-button-container {
					background-image: linear-gradient(#{transparentize($row-highlight, 1)}, #{transparentize($row-highlight, 0)});
				}
			}
		}
	}
}

// outside .cui-list-liew, we can use
// this in Form too

.cui-lv-tbody {
	display: flex;
	flex-direction: column;
}

.cui-lv-tr-outer {
	display: flex;
	flex: 0 0 auto;
	min-width: 0;
	outline: none;

	&.cui-selected,
	&.cui-selected:nth-child(even),
	&:focus,
	&:focus:nth-child(even) {
		background: $row-highlight;
		
		.cui-empty-label {
			color: hsl(205,33%,63%);
		}
	}
}

.cui-lv-tr {
	flex: 1 1 auto;
	display: flex;
	max-width: 100%;
	// padding: 0 $padding/2;
	
	&:empty {
		padding: 0;
	}
}

.cui-list-view-row-selectable {
	cursor: pointer;
}

.cui-list-view-row-move-handle-column {
	display: none;
	
	&:after {
		display: none;
	}

	.cui-drag-handle-row {
		margin-top: 2px;
	}

	&.cui-lv-td {
		width: $padding/2 + $table-data-padding*2+2;
		padding-left: $table-data-padding+2;
		padding-right: 0;
		align-items: center;
	}
}

.cui-list-view-row-movable .cui-list-view-row-move-handle-column {
	display: flex;
}

.cui-list-view-grid-quadrant-1,
.cui-list-view-grid-quadrant-3 {
	.cui-lv-td:last-child {
		// border-right: solid 1px black;
	}
}

.cui-lv-tr-fill-outer {
	flex: 1 1 auto;
	display: flex;

	> .cui-lv-tr {
		border-style: none;
	}

	&,
	.cui-lv-td {
		background: linear-gradient($zebra-color 50%, white 50%);
		background-size: 100% $table-data-height*2;
	}

	.cui-lv-td {
		// leave padding-left and padding-right 
		// because its used to measure
		// the column width for headers
		padding-top: 0;
		padding-bottom: 0;
	}
}

.cui-list-view-grid-rows-even .cui-lv-tr-fill-outer {
	&,
	.cui-lv-td {
		background-image: linear-gradient(white 50%, $zebra-color 50%);
	}
}

.cui-tmpl-list-view-tool-col-resize-marker {
	position: absolute;
	cursor: ew-resize !important;
	// bigger grab area
	margin: 0 -4px;
	padding: 0 4px;

	> div {
		width: 1px;
		margin-left: -1px;
		height: 100%;
		background: $table-header-border;
	}
}

.cui-list-view-tool-marker {
	position: absolute;
	background: $zebra-color;
	opacity: 0.5;
}

// Tree Node + Handle
.cui-tree-node {
	display: flex;
	flex: 1 1 auto;
	max-width: 100%;
}

.cui-tree-node-handle,
.cui-tree-node-spacer {
	width: 12px;
	flex: 0 0 auto;
	padding-right: 5px;
}

.cui-tree-node-handle {
	display: flex;
	text-align: center;
	justify-content: flex-end;
	align-items: center;

	&.cui-tree-node-is-open .fa {
		margin-top: -2px;
	}
}

.cui-tree-node-content {
	display: flex;
	flex: 1;
	min-width: 0;
	flex-wrap: wrap;
	
	.cui-label {
		min-width: 0;
		flex-shrink: 1;
		// padding: 0; CONFLICT removes padding from tags that are inside node content
		
		.fa {
			line-height: 1;
		}
	}
}

// ListViewTree
.cui-list-view-grid {
	&.cui-list-view-tree-no-hierarchy {
		.cui-tree-node-handle {
			display: none !important;
		}
	}
}

// Table
.cui-table {
	display: table;
	// border: 1px solid $table-border;
}

.cui-tr {
	display: table-row;
	
	// &:nth-child(odd) {
	// 	background: $zebra-color;
	// }

	&.cui-table-header {
		background: transparent;
	}
}

.cui-th,
.cui-td {
	display: table-cell;
	padding: $padding/2 $padding;
	vertical-align: top;
	
	&[colspan]{		
		> label,
		> .cui-label {
			margin-bottom: $padding/2;
		}
	}

	> .cui-empty-label {
		padding: 0;
	}
}

.cui-td--key {
	text-align: right;
	padding-right: 0;
	vertical-align: top;
}

.cui-td--value {
	vertical-align: top;
	word-break: break-all;
	width: 100%;
	// position: relative;
	
	// > span {
	// 	position: absolute;
 //    right: 10px;
 //    left: 10px;
 //    @include ellipsis;
 //  }
}

.cui-th {
	font-weight: bold;
	position: relative;
	border-bottom: 1px solid $table-header-border;
	font-size: 0.85em;

	&:after { // table-head line
		content: "";
		position: absolute;
		right: 0;
		top: 2px;
		bottom: 2px;
		width: 1px;
		background: $table-header-border;
	}
}

// Table Row Base-Widths

.cui-td--url input {
	width: 200px;
}

.status-2d-map {
	.cui-tr {
		&:nth-child(odd):not(:first-child) {
			background: $zebra-color;
		}

		&:first-child {
			.cui-td {
				border-bottom: 1px solid $table-border;
				position: relative;
		
				&:not(:last-child):after {
					content: "";
					position: absolute;
					right: 0;
					margin: 3px 0;
					top: 0;
					bottom: 0;
					width: 1px;
					background: $table-border;
				}
			}
		}
	}
}
	
// Nested Table
.cui-table .cui-table {
	.cui-tr {
		background: $foreground;
	}
}

// Form
.cui-form {
	margin: $padding;
}

.cui-form-container {
	flex-grow: 1;
	min-height: 0;
	display: flex;
	flex-direction: column;
	
	&.cui-form--horizontal {
		flex-direction: row;
		
		.cui-form-row {
			flex-grow: 0;
			min-width: 0;
		}
	}
}

.cui-form-block {
	&--has-checkbox {
		.cui-block-header {
			padding-bottom: $padding;	
		}

		.cui-block-content {
			display: none;
		}

		&.cui-form-block--checkbox-checked {
			.cui-block-header {
				padding-bottom: 7px;	
			}

			.cui-block-content {
				display: block;
				
				&:empty {
					padding-bottom: 3px;
				}
			}
		}
	}
}

.cui-form-row {
	flex-grow: 1;
	min-height: 0;
	display: flex;
	flex-direction: column;
	margin-bottom: $padding;
	
	&:last-child {
		margin-bottom: 0;
	}
}

.cui-form-table {
	width: calc(100% - #{2*$padding});
	display: table;
	margin: $padding;
	
	.cui-tr {
		display: table-row;
		
		&:nth-child(2n+1) {
			background: none;
		}
	}
	
	.cui-th,
	.cui-td {
		display: table-cell;
		width: auto;
	}
	
	.cui-data-field {
		// margin: 0;	// UNCLEAR conflict with multi-input spacing
	}
}

.cui-form-table-has-not-left-column {
	> .cui-tr > .cui-td.cui-form-key {
		display: none;
	}
}

.cui-form-tr,
.cui-form-tr-header {
	display: table-row;
}

.cui-form-tr {
	.cui-form-options-table,
	.cui-form-table-horizontal {
		margin-top: -$padding;
		margin-bottom: -$padding;

		.cui-form-tr {			
			&:before {
				left: 0;
				right: 0;
			}
		}

		.cui-form-key,
		.cui-form-right {
			width: auto;
		}

		.cui-form-key {
			padding-left: 0;
			padding-right: 0;
		}
	}
	
	.cui-form-options-table .cui-form-value {
		width: 70px;
	}
}

.cui-form-td {
	display: table-cell;
	padding: $padding/2 0;
	vertical-align: top;
}
	
.cui-form-key {
	width: $td-width;
	padding-right: 10px;
	
	label {
		display: inline-block;
		margin-top: 3px;
	}
}

.cui-form-value {
	flex-grow: 1;
	vertical-align: middle;
}

.cui-form-tr-content-is-form-vertical {
	.cui-form-table {
		margin: 0;
		width: 100%;
	}

	> .cui-form-value {
		padding: 0 !important;
	}
}

.cui-form-table-has-not-right-column {
	> .cui-form-tr > .cui-form-td.cui-form-right {
		display: none;
	}
}

.cui-form[cui-data-field-form-depth="0"] {
	> .cui-vertical-layout-center {
		> .cui-form-table {
			> .cui-form-tr:last-child {
				border-color: #ff44ee;
			}
		}
	}
}

.cui-form:not([cui-data-field-form-depth="0"]) {
	> .cui-vertical-layout-center {
		> .cui-form-table {
			> .cui-form-tr:last-child {
				border-style: none;
			}
		}
	}
}

.cui-data-field {
	flex: 1;
	max-width: 100%;
	margin: 0;
	
	.cui-list-view-grid-quadrant-3 {
		min-height: 3*$table-data-height; // for when using empty lists that can get filled
	}

	.cui-list-view-row-move-handle-column {
		align-items: center;
		padding-top: 0;	
		padding-bottom: 0;	
	}

	&-disabled {
		opacity: 0.3;
		
		.cui-data-field-disabled {
			opacity: 1;
		}
	}
}

.cui-data-field-proxy {
	// could be a list view, thus min-height: 0;
	min-height: 0;
  display: flex;
  flex-direction: column;
}

.cui-data-field-output-label {
	.cui-label-content {
		white-space: normal;
	}
}

.cui-output-empty {
	color: $muted-color;
}

.cui-data-field-hidden {
	display: none !important;
}

.cui-form-table-has-left-column {
	.cui-form-key,
	.cui-form-right {
		// width: $td-width;
		// UNCLEAR breaks web-link configuration popover table layout
	}

	.cui-form-key {
		width: $td-width;
		line-height: 24px;
		text-align: right;
		@include ellipsis;
	}

	.cui-form-value {
		padding-right: $padding;
	}

	.cui-form-td {
		border-top: 1px solid hsl(205,10%,96%);
	}

	.cui-form-tr,
	.cui-form-tr-header {
		// padding-top: 1px;
		// UNCLEAR forms already have padding in
		// padding: $padding 0 $padding - 1px;

		&:first-child .cui-form-td {
			border-top-width: 0;
		}
	}
}

.cui-maximize-horizontal > .cui-vertical-layout-center {
	> .cui-form-table {
		> tr {
			> .cui-form-td.cui-form-value {
				flex: 1 1 auto;
				width: 200px;
			}
		}
	}

	> .cui-form-table-vertical {
		> .cui-tr {
			> .cui-form-value {
				flex-shrink: 1;
				min-width: 0;
			}
		}
	}
}

.cui-form-popover {
	.cui-vertical-layout-center {		
		+ .cui-vertical-layout-bottom {
			margin: 5px 0 0;
			
			&:empty {
				display: none;
			}

			.cui-empty-label {
				padding: 0;
			}
		}
	}
}


// Options

.cui-options-inactive {
	margin-top: $padding;
	
	&:empty {
		margin-top: 0;
	}
}

.cui-options-sortable-option {
	display: flex;
	
	.cui-options-sortable-drag-handle {
		width: 16px;
		display: flex;
		flex-shrink: 0;
		margin-right: 2px;
    padding: 0 4px 0 0;
    
    .cui-drag-handle-row {
    	margin-top: 6px;
    }
	}
}

.cui-options-top .cui-label span:not(:empty) {
	padding-bottom: 3px;
	display: inline-block;
}

// align options with label if there is only one option
.cui-options-center {
	min-height: 24px;
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;
	max-width: 450px;
	flex-direction: column;
	
	&:empty {
		min-height: 0;
	}

	.cui-button {
		height: 22px;
		line-height: 22px;
	}

	.cui-data-field {
		flex-grow: 0;
	}
}

.cui-options--horizontal {
	.cui-options-center {
		flex-direction: row;
	}
}

.cui-options--vertical {
	[max-chars] {
		width: auto;
	}
}

.cui-options--sortable {
	.cui-options-center {
		flex-direction: column;
	}
}

.cui-options-title {
	font-weight: bold;	
}

.cui-options-order-hint {
	max-width: 250px;
	font-size: 11px;
	margin-top: $compensating-padding;
	margin-left: 18px;
	margin-bottom: 4px !important;
	color: $secondary-color;
}

.cui-drag-drop-select-draggable {
	cursor: -webkit-grab;
	cursor:         grab;
}

.cui-drag-drop-select-lasso {
	cursor: default;
}

.cui-drag-drop-select-sortable,
.drag-drop-select-helper {
	// CONFLICT - drag-drop select sortable is used on a whole sidebar in version editor - breaks a child form
	// .cui-form-td.cui-form-key {
	// 	width: 12px;
	// 	padding: 0;
	// 	margin-right: $padding/2;
	// 	display: flex;
	// }
	cursor: -webkit-grabbing;
	cursor: 				grabbing;
	
	.cui-data-field {
		max-width: none;
	}
}

.cui-drag-handle-row {
	&:hover {
		opacity: 0.8;
	}

	flex: 1 1 auto;
	cursor: move;
	height: 12px;
	width: 100%;

	background: linear-gradient($drag-handle-color 1px, transparent 1px, transparent 2px);
	background-size: 100% 3px;
}

// DateTime
.cui-date-time {
	display: flex;
	align-items: flex-end;
	height: 24px;
	line-height: 24px;
	
	.cui-input-invalid-hint {
		display: none;
	}
}

.cui-date-time-calendar .cui-buttonbar {
	justify-content: space-between;
}

.cui-buttonbar-group-date,
.cui-buttonbar-group-time { // DateTime Day:Month:Year Hour:Minute
	.cui-select {
		&:not(:last-child) .cui-button .cui-button-visual {
			border-right-width: 0;
		}

		&:last-child .cui-button .cui-button-visual {
			border-right-width: 1px;
			border-top-right-radius: $button-radius;
			border-bottom-right-radius: $button-radius;
			padding-right: 4px;
		}

		&:not(:first-child) .cui-button .cui-button-visual {
			border-left-width: 0;
		}

		&:first-child .cui-button {
			.cui-button-visual {
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}

			&:before {
				display: none;
			}
		}

		&:last-child .cui-button .cui-button-visual {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}

		&:not(:first-child):not(:last-child) .cui-button .cui-button-visual {
			border-radius: 0;
		}

		.cui-button .cui-button-visual {
			padding: 0;
		}

		.cui-button-center {
			text-align: right;
			padding-right: 3px;
		}
	}
}

.cui-date-time-input-center {
	flex: 1 1 auto;

	&:focus {
		z-index: 1;
	}

	input {
		position: relative;
		min-width: 80px;
	}
}

.cui-date-time-input-right {
	position: relative;

	.cui-button {
		margin-left: -1px;
		height: 100%;
		vertical-align: bottom;
		
		.cui-button-visual {
			border-radius: 0;
			padding: 0 $padding/2;
		}

		&:focus {
			z-index: 1;
		}
	}
}

.cui-date-time-day {
	border-radius: $button-radius;
}

.cui-date-time-previous-month,
.cui-date-time-next-month,
.cui-date-time-week {
	color: hsl(205,10%,79%);
}

.cui-date-time-selected {
	background: $highlight-color !important;
	color: $on-highlight-color !important;
}

.cui-date-time-now {
	background: hsl(205,20%,92%);
}

.cui-date-time-footer {
	.cui-buttonbar > *:not(:last-child) {
		margin-right: 0;
	}

	.cui-label {
		cursor: default;
	}

	> .cui-horizontal-layout-left {
		flex: 1 0 auto;
		margin-right: $gap;

		.cui-label { // June, September
			flex: 1 1 auto;
    	justify-content: center;
			padding: 0;
		}
	}

	> .cui-horizontal-layout-center {
		flex-grow: 0 !important;
	}

	.cui-button-visual {
		padding: 0 $padding/2;
	}
}

// DateTimeDate

.cui-date-time-date {
	width: 100%;
	margin: $padding 0;
	flex-grow: 1;
	border: none;

	.cui-tr {
		padding: 0;
		display: flex;
	}

	.cui-th {
		font-size: inherit;
		
		&:after {
			display: none;
		}
	}

	.cui-td,
	.cui-th {
		width: calc(100% / 8); // 8 columns
		text-align: right;
		cursor: default;
		justify-content: center;
		padding-right: 7px;
		line-height: 18px;

		&.cui-date-time-day {
			cursor: pointer;
		}
	}
}

// DateTime Popover

.cui-menu.cui-date-time-60-select {
	.cui-tmpl-item-list-body {
		box-sizing: content-box;
		width: 370px;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		
		> * {
			box-sizing: border-box;
		}

		.cui-button {
			width: 37px;
			height: 30px;
			align-items: center;
			text-align: center;
		}
	}
}


.cui-date-time-popover {
	.cui-simple-pane > .cui-vertical-layout-center {
		padding: $padding;
	}

	.cui-tmpl-date-time {
		flex: 1 1 auto;

		.cui-date-time-header {
			display: none;
		}

		&[browser="time"] {
			.cui-date-time-calendar {
				margin-left: -100%;
			}
		}

		.cui-date-time-browser {
			.cui-date-time-calendar,
			.cui-date-time-clock {
				width: 100%;
			}

			.cui-date-time-calendar {
				transition: margin-left 0.5s ease-out;
			}
			display: flex;
			// overflow: hidden; cuts off year-picker outline
			flex: 1 1 auto;
			
			.cui-number-input {
				input {
					width: 4ch;
					box-sizing: content-box;
					min-width: 0;
					text-align: center;
				}
			}
		}
	}
}

.cui-date-time-clock {
	display: none;
}


// MultiInput

.cui-multi-input .cui-multi-input-container {
	display: flex;
	flex-direction: column;
  align-items: stretch;
	flex: 1 1 auto;

	> .cui-multi-input-input {
		display: flex;
		margin-left: 0;
		margin-right: 0;
		
		> .cui-data-field-multi-input-center {
			flex: 1 1 auto;
		}

		> .cui-data-field-multi-input-right {
			flex: 0 0 auto;
			
			.cui-button {
				width: 25px;
				margin-top: 2px;
			}
		}
	}
}

.cui-multi-input-input {
	@include margin-top(0.5);
	position: relative;
	
	&.cui-data-field-hidden {
		+ .cui-multi-input-input {
			margin-top: 0;
		}
	} 

	.cui-input,
	.cui-textarea {
		padding-right: 20px;
	}
}

.cui-data-field-multi-input-right {
	position: absolute;
	right: 0;
	top: 0;
	z-index: 1; // put in front of focused input field
}

.cui-multi-input-tag-button {  
	.cui-button-visual {
		@include button-reset;
		color: hsl(0,0%,30%);
		font-size: 10px;
  	line-height: 20px;
  }
}

// Drag & Drop

.cui-drag-drop-select-transparent {
	pointer-events: none !important;
	
	* {
		pointer-events: none !important;
	}
}

.drag-drop-select-helper {
	z-index: 3; // above drop helper
	
	&.cui-tr {
		padding: 0;
	}
}

.cui-sortable-placeholder {
	opacity: 0;
}


// Droppable

.cui-droppable {
	// marks an active droppable
	// - in list views not neccesary because we have the droppable helper
	// opacity: 0.5;
}

.cui-droppable-drop-helper {
	box-shadow: 0 0 0 2px $highlight-color inset;
	position: absolute;
	z-index: 2;
	pointer-events: none;
}

.cui-droppable-target-helper {
	//overwrite any other animation, its just temporary
	transition: transform 300ms ease !important;
}

.cui-droppable-target-helper-y--after {
	transform: translateY(-25%);
}

.cui-droppable-target-helper-y--before {
	transform: translateY(25%);
}

.cui-droppable-target-helper-x--after {
	transform: translateX(-25%);
}

.cui-droppable-target-helper-x--before {
	transform: translateX(25%);
}

// Movable
.cui-drag-drop-select-movable {
	cursor: move;
}

// Resizable
.cui-drag-drop-select-resizable {
	position: relative;
}

.cui-resizable-handle {
	position: absolute;

	&.cui-resizable-handle-se {
		bottom: -8px;
		right: -8px;
		width: 16px;
		height: 16px;
		cursor: nwse-resize;
	}

	&.cui-resizable-handle-nw {
		top: -8px;
		left: -8px;
		width: 16px;
		height: 16px;
		cursor: nwse-resize;
	}

	&.cui-resizable-handle-sw {
		bottom: -8px;
		left: -8px;
		width: 16px;
		height: 16px;
		cursor: nesw-resize;
	}

	&.cui-resizable-handle-ne {
		right: -8px;
		top: -8px;
		width: 16px;
		height: 16px;
		cursor: nesw-resize;
	}

	&.cui-resizable-handle-s {
		left: 8px;
		right: 8px;
		bottom: -8px;
		height: 16px;
		cursor: ns-resize;
	}

	&.cui-resizable-handle-n {
		left: 8px;
		right: 8px;
		top: -8px;
		height: 16px;
		cursor: ns-resize;
	}

	&.cui-resizable-handle-e {
		right: -8px;
		top: 8px;
		bottom: 8px;
		width: 16px;
		cursor: ew-resize;
	}

	&.cui-resizable-handle-w {
		left: -8px;
		top: 8px;
		bottom: 8px;
		width: 16px;
		cursor: ew-resize;
	}
}


// Lasso
.cui-lasso-area {
	position: relative;
}

.cui-lasso {
	position: absolute;
	background-color: transparentize($highlight-color, 0.77);
	display: block;
	pointer-events: none;
	z-index: 1;
}

.cui-drag-drop-select-lasso-element-in-lasso {
	opacity: 0.8;
}



// Block

.cui-block {
	border-bottom: 1px solid hsl(180,9%,93%);
	
	&:last-child {
		border-bottom-width: 0;
	}

	&.cui-block-level-1 {
		> .cui-block-header {
			font-size: 15px;
		}
	}
	&.cui-block-level-2 {
		border-bottom-width: 0;
		> .cui-block-header {
			font-size: 13px;
		}
	}
	> .cui-block-header {
		font-weight: bold;
	}
}

.cui-block-header {
	padding: $padding $padding 7px;
}

.cui-block-content {
	padding: 0 $padding $padding;
	
	&:empty {
		display: none;
	}
	
	.cui-form-table {
		width: 100%;
		margin: $padding 0;
	}
	
	.cui-block-header,
	.cui-block-content {
		padding-left: 0;
		padding-right: 0;
	}
}

// StickyHeader

.cui-sticky-header {
	padding: 4px $padding;
	font-size: 11px;
	font-weight: bold;
	color: hsl(205,20%,20%);
	height: 22px;
	margin-bottom: $padding;
	flex-basis: 100%;
	margin-top: $padding*2;
	border-top: 1px solid $soft-border;
}

.cui-sticky-header-control + .cui-sticky-header,
.cui-sticky-header:first-child,
.cui-block + .cui-sticky-header {
	margin-top: 0;
	border-top-width: 0;
}

.cui-sticky-header-control {
	position: fixed;
	overflow: hidden;

	top: 0;
	left: 0;
	right: 0;
	height: 0;
	z-index: 1;

	.cui-tmpl-sticky-header {
		margin: 0;
		position: absolute;
		left: 0;
		right: 0;
		font-weight: 600;
		background: hsla(0,0%,100%,.94);
		border-top: none;
		box-shadow: 0 1px transparentize(darken($soft-border, 50%), 0.85);
	}
}

// ProgressMeter
.cui-tmpl-progress-meter {
	.cui-progress-meter-bar {
		height: 24px;
		position: relative;
		border-radius: $button-radius;
		overflow: hidden;
		// to make sure that the border-radius will cut off all child backgrounds
		// http://stackoverflow.com/questions/5736503/how-to-make-css3-rounded-corners-hide-overflow-in-chrome-opera
		opacity: 0.9999;

		.cui-progress-meter-fill-background,
		.cui-progress-meter-fill,
		.cui-progress-meter-text {
			position: absolute;
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
		}
		.cui-progress-meter-fill-background {
			border-radius: $button-radius;
			background: lighten(desaturate($highlight-color, 90%), 43%);
		}
		.cui-progress-meter-fill {
			display: none;
			background: $highlight-color;
		}
		.cui-progress-meter-text {
			display: none;
			color: white;
			justify-content: center;
			line-height: 24px;
		}
		.cui-progress-meter-icon {
			display: flex;
			position: absolute;
			left: 0;
			top: 0;
			bottom: 0;
			right: 0;
			color: white;
			align-items: center;
			justify-content: center;
		}

	}
	&[state="waiting"] {
		.cui-progress-meter-fill-background {
			// reddish
			// background-color: #ff6054;
		}
	}

	&[state="percent"] {
		.cui-progress-meter-icon {
			display: none;
		}
		.cui-progress-meter-text {
			display: flex;
		}
		.cui-progress-meter-fill {
			display: flex;
		}
	}
}

.cui-file-upload-progress-meter {
	align-items: center;
	
	.cui-progress-meter {
		width: 100%;
	}
}

.cui-file-upload-drop-zone.cui-file-upload-drag-over:after {
	content: '';
	pointer-events: none;
	display: block;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	box-shadow: 0 0 0 2px $highlight-color inset;
	z-index: 1;
}

// DigiDisplay

.cui-digi-display {
	// border: 1px solid black;
	align-self: flex-start;
	display: flex;

	> div {
		vertical-align: bottom;
		height: 20px;
		// border-right: 1px solid #c0c0c0;
		&:last-child {
			border-right: 0;
		}
		text-align: center;
		overflow: hidden;
		padding: 1px;
		font-family: monospace;
		font-size: 16px;
		line-height: 18px;
	}

	.cui-digi-display-digit {
		transition: margin-top 0.3s ease;
		height: 18px;
	}

	.cui-digi-display-static {
		height: 20px;
	}
}

// Autocomplete
.cui-tmpl-autocompletion-popup {
	flex: 1;
	overflow: auto;	
	-webkit-overflow-scrolling: touch;
}

.cui-autocompletion-popup {
	min-height: 0;	
}

.cui-autocompletion-popup-container {
	padding: 4px 0;
	
	&.container-status {
		padding: 4px $padding;
		background: $toolbar-background;
		border-top: 1px solid $soft-border;
		
		.cui-label {
			color: $muted-color;
			cursor: default;
			font-size: 11px;
			line-height: 14px;
			
			& + .cui-button {
				display: block;
				padding: 7px 0 4px;
				height: auto;
			}
		}
	}
}

.cui-autocompletion-popup-item {
	padding: 3px $padding;
	cursor: pointer;
	color: hsl(205,7%,22%);
	outline: none;
	
	&:hover,
	&:focus {
		background: hsl(205,17%,98%);
	}

	em {
		font-weight: bold;
		font-style: normal;
	}

	.cui-label {
		max-width: 100%;
	}

	.cui-label-content {
		flex-shrink: 1;	
	}
}

// Space
.cui-space {
	margin: $padding;
	
	&:empty {
		margin: $padding/2;
	}
}

.cui-small-space {
	margin: $padding/2;
	
	&:empty {
		margin: $padding/4;
	}
}

.cui-large-space {
	margin: $padding*2;
	
	&:empty {
		margin: $padding;
	}
}

.cui-flexible-space {
	flex: 1;
}

// Console
.cui-console {
	padding: $padding;
	font-family: monospace;

	.cui-label-multiline {
		margin: 0;
	}

	.cui-label:not(:last-child) {
		border-bottom: 1px solid hsl(0,0%,94%);
	}
}


// CUI technical stuff
.cui-tmpl {
	// hide all templates
	display: none !important;
}

@keyframes nodeInserted {
	from { opacity: 0.99; }
	to { opacity: 1; }
}

.cui-template-empty {
	&.cui-label {
		display: none !important;
	}
}

[hidden] {
	display: none !important;
}