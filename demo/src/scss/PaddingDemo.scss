
$pad-big: 5px;
$outer-pad-bigger: 20px;
$outer-pad-big: 10px;
$outer-pad-normal: 5px;

$first_variant: false;

// create_levelled_selectors("> .level ","> .fill ", 3) returns the string ...
// > .level ,
// > .level > .fill  > .level ,
// > .level > .fill > .level > .fill > .level
@function create_levelled_selectors($level,$level_fill, $max_levels) {
    $selectors: "";
    @for $i from 1 through $max_levels {
        $selector: "";
        @for $j from $i through $max_levels {
            $selector: $selector + $level;
            @if ($j < $max_levels) {
                $selector: $selector + $level_fill;
            }
        }
        $selectors: $selectors + $selector;
        @if ($i < $max_levels) {
            $selectors: $selectors + ",";
        }
    }
    @return $selectors;
}


// outer padding
@mixin outer_padding($size_name, $size) {
    @if ($first_variant) {
        #{".cui-padding-outer-"+$size_name}
        {
            &.cui-horizontal-layout,
            & .cui-horizontal-layout
            {
                > .cui-layout-cell:first-child {
                    padding-left: $size;
                    > .cui-padding-reset {
                        margin-left: -$size;
                    }
                }
                > .cui-layout-cell:last-child {
                    padding-right: $size;
                    > .cui-padding-reset {
                        margin-right: -$size;
                    }
                }
            }
        }
    }
    @else {
        #{".cui-padding-outer-"+$size_name} {
            $max_levels: 3;

            #{create_levelled_selectors("> .cui-layout-cell:last-child ","> .cui-layout ",$max_levels)} {
                > *:not(.cui-padding-reset) {
                    margin-right: $size;
                }
            }

            #{create_levelled_selectors("> .cui-layout-cell:first-child ","> .cui-layout ",$max_levels)} {
                > *:not(.cui-padding-reset) {
                    margin-left: $size;
                }
            }
        }
    }
}

@mixin overwrite_outter_paddings_when_inbetween($size_name, $size) {
    #{".cui-padding-outer-"+$size_name} {
        .cui-layout-cell:not(:first-child):not(:last-child) > .cui-horizontal-layout {
            > .cui-layout-cell:last-child,
            > .cui-layout-cell:first-child {
                padding-right: $size;
                padding-left: $size;
            }
        }

        .cui-layout-cell:first-child > .cui-horizontal-layout {
            > .cui-layout-cell:last-child {
                padding-right: $size;
            }
        }

        //only needed in outer padding context
        .cui-layout-cell:last-child > .cui-horizontal-layout {
            > .cui-layout-cell:first-child {
                padding-left: $size;
            }
        }
    }
}



.cui-padding-demo {

    //we have to use it to make sure our example layouts are not stretched into the demo table cell
    .cui-padding-demo-reset-width {
        display: inline-block;
    }

    .cui-layout {
        border: 1px solid blue;
    }
    .cui-layout-cell {
        @include flex(0, 0);

        //demo content
        .cui-label {
            background: tomato;
            width: 150px;
            height: 50px;

            line-height: 50px;
            color: white;
            font-weight: bold;
            font-size: 2em;
            text-align: center;
            @include justify_content(center);

            &.cui-padding-reset {
                background-color: orange;
            }
        }
    }

    .cui-horizontal-layout.cui-absolute {
        width: 500px;
        height: 100px;
    }

    @if ($first_variant) {

        .cui-horizontal-layout {

            > .cui-layout-cell {
                padding-left: $pad-big;
                padding-right: $pad-big;
                > .cui-padding-reset {
                    margin-left: -$pad-big;
                    margin-right: -$pad-big;
                }
            }

            > .cui-layout-cell:first-child {
                padding-left: $pad-big;
                > .cui-padding-reset {
                    margin-left: -$pad-big;
                }
            }

            > .cui-layout-cell:last-child {
                padding-right: $pad-big;
                > .cui-padding-reset {
                    margin-right: -$pad-big;
                }
            }
        }

        //set all outter paddings no matter if nested (in nested layouts some padding are not outter anymore)
        @include outer_padding(bigger, $outer-pad-bigger);
        @include overwrite_outter_paddings_when_inbetween(bigger, $pad-big);

    } @else {

        .cui-layout-cell > *:not(.cui-padding-reset) {
            margin-right: $pad-big;
            margin-left: $pad-big;
        }

        @include outer_padding(normal, $outer-pad-normal);
        @include outer_padding(big, $outer-pad-big);
        @include outer_padding(bigger, $outer-pad-bigger);

    }
}